// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    [Migration("20240930010908_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 8, 31, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6208),
                            Status = 4
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 9, 2, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6218),
                            Status = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 9, 5, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6219),
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 9, 10, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6220),
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 9, 12, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6221),
                            Status = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 9, 15, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6222),
                            Status = 4
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 9, 18, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6223),
                            Status = 5
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 9, 20, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6223),
                            Status = 6
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 9, 22, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6224),
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 9, 25, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6225),
                            Status = 2
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 9, 26, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6226),
                            Status = 4
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 9, 27, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6226),
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 9, 28, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6227),
                            Status = 4
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 9, 29, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6228),
                            Status = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 9, 30, 1, 9, 7, 696, DateTimeKind.Utc).AddTicks(6228),
                            Status = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ProductPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            ProductName = "Notebook",
                            ProductPrice = 2500.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 2,
                            ProductName = "Smartphone",
                            ProductPrice = 1500.00m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ProductId = 3,
                            ProductName = "Mouse",
                            ProductPrice = 50.00m,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 4,
                            ProductId = 4,
                            ProductName = "Teclado",
                            ProductPrice = 80.00m,
                            Quantity = 3
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 5,
                            ProductId = 5,
                            ProductName = "Monitor",
                            ProductPrice = 600.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 6,
                            ProductId = 6,
                            ProductName = "Impressora",
                            ProductPrice = 800.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            OrderId = 7,
                            ProductId = 7,
                            ProductName = "Cadeira Gamer",
                            ProductPrice = 1200.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 8,
                            OrderId = 8,
                            ProductId = 8,
                            ProductName = "Fone de Ouvido",
                            ProductPrice = 200.00m,
                            Quantity = 4
                        },
                        new
                        {
                            Id = 9,
                            OrderId = 9,
                            ProductId = 9,
                            ProductName = "Caixa de Som Bluetooth",
                            ProductPrice = 350.00m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 10,
                            OrderId = 10,
                            ProductId = 10,
                            ProductName = "HD Externo",
                            ProductPrice = 400.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            OrderId = 11,
                            ProductId = 11,
                            ProductName = "SSD",
                            ProductPrice = 450.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            OrderId = 12,
                            ProductId = 12,
                            ProductName = "Câmera de Segurança",
                            ProductPrice = 700.00m,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 13,
                            OrderId = 13,
                            ProductId = 13,
                            ProductName = "Webcam",
                            ProductPrice = 150.00m,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 14,
                            OrderId = 14,
                            ProductId = 14,
                            ProductName = "Mousepad",
                            ProductPrice = 25.00m,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 15,
                            OrderId = 15,
                            ProductId = 15,
                            ProductName = "Notebook Cooler",
                            ProductPrice = 90.00m,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Notebook",
                            Price = 2500.00m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            Name = "Smartphone",
                            Price = 1500.00m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mouse",
                            Price = 50.00m,
                            Quantity = 300
                        },
                        new
                        {
                            Id = 4,
                            Name = "Teclado",
                            Price = 80.00m,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 5,
                            Name = "Monitor",
                            Price = 600.00m,
                            Quantity = 75
                        },
                        new
                        {
                            Id = 6,
                            Name = "Impressora",
                            Price = 800.00m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cadeira Gamer",
                            Price = 1200.00m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 8,
                            Name = "Fone de Ouvido",
                            Price = 200.00m,
                            Quantity = 500
                        },
                        new
                        {
                            Id = 9,
                            Name = "Caixa de Som Bluetooth",
                            Price = 350.00m,
                            Quantity = 150
                        },
                        new
                        {
                            Id = 10,
                            Name = "HD Externo",
                            Price = 400.00m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 11,
                            Name = "SSD",
                            Price = 450.00m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 12,
                            Name = "Câmera de Segurança",
                            Price = 700.00m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 13,
                            Name = "Webcam",
                            Price = 150.00m,
                            Quantity = 120
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mousepad",
                            Price = 25.00m,
                            Quantity = 300
                        },
                        new
                        {
                            Id = 15,
                            Name = "Notebook Cooler",
                            Price = 90.00m,
                            Quantity = 70
                        });
                });

            modelBuilder.Entity("Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
